{"ast":null,"code":"import _slicedToArray from\"/home/hanzhe/finalgame/react-xstate-colourchanger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/home/hanzhe/finalgame/react-xstate-colourchanger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import\"./styles.scss\";import*as React from\"react\";import*as ReactDOM from\"react-dom\";import{Machine,assign,send,actions}from\"xstate\";import{useMachine,asEffect}from\"@xstate/react\";import{inspect}from\"@xstate/inspect\";import{dmMachine}from\"./dmAppointment\";var cancel=actions.cancel;inspect({url:\"https://statecharts.io/inspect\",iframe:false});import{useSpeechSynthesis,useSpeechRecognition}from'react-speech-kit';import{jsx as _jsx}from\"react/jsx-runtime\";var machine=Machine({id:'root',type:'parallel',states:{dm:_objectSpread({},dmMachine),asrtts:{initial:'idle',states:{idle:{on:{LISTEN:'recognising',SPEAK:{target:'speaking',actions:assign(function(_context,event){return{ttsAgenda:event.value};})}}},recognising:{initial:'progress',entry:'recStart',exit:'recStop',on:{ASRRESULT:{actions:['recLogResult',assign(function(_context,event){return{recResult:event.value};})],target:'.match'},RECOGNISED:{target:'idle',actions:cancel(\"maxsp\")},MAXSPEECH:'idle'},states:{progress:{},match:{entry:send('RECOGNISED')}}},speaking:{entry:'ttsStart',on:{ENDSPEECH:'idle'}}}}}},{actions:{recLogResult:function recLogResult(context){/* context.recResult = event.recResult; */console.log('<< ASR: '+context.recResult);},test:function test(){console.log('test');},logIntent:function logIntent(context){/* context.nluData = event.data */console.log('<< NLU intent: '+context.nluData.intent.name);}}});var ReactiveButton=function ReactiveButton(props){switch(true){case props.state.matches({asrtts:'recognising'}):return/*#__PURE__*/_jsx(\"button\",_objectSpread(_objectSpread({type:\"button\",className:\"glow-on-hover\",style:{animation:\"glowing 20s linear\"}},props),{},{children:\"listen!\"}));case props.state.matches({asrtts:'speaking'}):return/*#__PURE__*/_jsx(\"button\",_objectSpread(_objectSpread({type:\"button\",className:\"glow-on-hover\",style:{animation:\"bordering 1s infinite\"}},props),{},{children:\"speak!\"}));default:return/*#__PURE__*/_jsx(\"button\",_objectSpread(_objectSpread({type:\"button\",className:\"glow-on-hover\"},props),{},{children:\"Welcome!\"}));}};function App(){var _useSpeechSynthesis=useSpeechSynthesis({onEnd:function onEnd(){send('ENDSPEECH');}}),speak=_useSpeechSynthesis.speak,cancel=_useSpeechSynthesis.cancel,speaking=_useSpeechSynthesis.speaking;var _useSpeechRecognition=useSpeechRecognition({onResult:function onResult(result){send({type:\"ASRRESULT\",value:result});}}),listen=_useSpeechRecognition.listen,listening=_useSpeechRecognition.listening,stop=_useSpeechRecognition.stop;var _useMachine=useMachine(machine,{devTools:true,actions:{recStart:asEffect(function(){console.log('Ready to receive your speech.');listen({interimResults:false,continuous:true});}),recStop:asEffect(function(){console.log('Recognition stopped.');stop();}),changeColour:asEffect(function(context){console.log('Repainting...');document.body.style.background=context.recResult;}),ttsStart:asEffect(function(context,effect){console.log('Speaking...');speak({text:context.ttsAgenda});}),ttsCancel:asEffect(function(context,effect){console.log('TTS STOP...');cancel();})/* speak: asEffect((context) => {\n\t     * console.log('Speaking...');\n             *     speak({text: context.ttsAgenda })\n             * } */}}),_useMachine2=_slicedToArray(_useMachine,3),current=_useMachine2[0],send=_useMachine2[1],service=_useMachine2[2];return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(ReactiveButton,{state:current,onClick:function onClick(){return send('CLICK');}})});};/* RASA API\n *  */var proxyurl=\"https://cors-anywhere.herokuapp.com/\";var rasaurl='https://finalprojectgame.herokuapp.com/model/parse';var nluRequest=function nluRequest(text){return fetch(new Request(proxyurl+rasaurl,{method:'POST',headers:{'Origin':'http://maraev.me'},// only required with proxy\nbody:\"{\\\"text\\\": \\\"\".concat(text,\"\\\"}\")})).then(function(data){return data.json();});};var rootElement=document.getElementById(\"root\");ReactDOM.render(/*#__PURE__*/_jsx(App,{}),rootElement);","map":{"version":3,"sources":["/home/hanzhe/finalgame/react-xstate-colourchanger/src/index.tsx"],"names":["React","ReactDOM","Machine","assign","send","actions","useMachine","asEffect","inspect","dmMachine","cancel","url","iframe","useSpeechSynthesis","useSpeechRecognition","machine","id","type","states","dm","asrtts","initial","idle","on","LISTEN","SPEAK","target","_context","event","ttsAgenda","value","recognising","entry","exit","ASRRESULT","recResult","RECOGNISED","MAXSPEECH","progress","match","speaking","ENDSPEECH","recLogResult","context","console","log","test","logIntent","nluData","intent","name","ReactiveButton","props","state","matches","animation","App","onEnd","speak","onResult","result","listen","listening","stop","devTools","recStart","interimResults","continuous","recStop","changeColour","document","body","style","background","ttsStart","effect","text","ttsCancel","current","service","proxyurl","rasaurl","nluRequest","fetch","Request","method","headers","then","data","json","rootElement","getElementById","render"],"mappings":"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","sourcesContent":["import \"./styles.scss\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Machine, assign, send, State, actions} from \"xstate\";\nimport { useMachine, asEffect } from \"@xstate/react\";\nimport { inspect } from \"@xstate/inspect\";\nimport { dmMachine } from \"./dmAppointment\";\n\nconst {cancel}=actions\n\ninspect({\n    url: \"https://statecharts.io/inspect\",\n    iframe: false\n});\n\nimport { useSpeechSynthesis, useSpeechRecognition } from 'react-speech-kit';\n\n\nconst machine = Machine<SDSContext, any, SDSEvent>({\n    id: 'root',\n    type: 'parallel',\n    states: {\n        dm: {\n            ...dmMachine\n        },\n        asrtts: {\n            initial: 'idle',\n            states: {\n                idle: {\n                    on: {\n                        LISTEN: 'recognising',\n                        SPEAK: {\n                            target: 'speaking',\n                            actions: assign((_context, event) => { return { ttsAgenda: event.value } })\n                        }\n                    }\n                },\n                recognising: {\n                    initial: 'progress',\n                    entry: 'recStart',\n                    exit: 'recStop',\n                    on: {\n                        ASRRESULT: {\n                            actions: ['recLogResult',\n                                assign((_context, event) => { return { recResult: event.value } })],\n                            target: '.match'\n                        },\n                        RECOGNISED: {target: 'idle', actions: cancel(\"maxsp\")},\n                        MAXSPEECH: 'idle'\n                    },\n                    states: {\n                        progress: {\n                        },\n                        match: {\n                            entry: send('RECOGNISED'),\n                        },\n                    }\n                },\n                speaking: {\n                    entry: 'ttsStart',\n                    on: {\n                        ENDSPEECH: 'idle',\n                    }\n                }\n            }\n        }\n    },\n},\n    {\n        actions: {\n            recLogResult: (context: SDSContext) => {\n                /* context.recResult = event.recResult; */\n                console.log('<< ASR: ' + context.recResult);\n            },\n            test: () => {\n                console.log('test')\n            },\n            logIntent: (context: SDSContext) => {\n                /* context.nluData = event.data */\n                console.log('<< NLU intent: ' + context.nluData.intent.name)\n            }\n        },\n    });\n\n\n\ninterface Props extends React.HTMLAttributes<HTMLElement> {\n    state: State<SDSContext, any, any, any>;\n}\nconst ReactiveButton = (props: Props): JSX.Element => {\n    switch (true) {\n        case props.state.matches({ asrtts: 'recognising' }):\n            return (\n                <button type=\"button\" className=\"glow-on-hover\"\n                    style={{ animation: \"glowing 20s linear\" }} {...props}>\n                    listen!\n                </button>\n            );\n        case props.state.matches({ asrtts: 'speaking' }):\n            return (\n                <button type=\"button\" className=\"glow-on-hover\"\n                    style={{ animation: \"bordering 1s infinite\" }} {...props}>\n                    speak!\n                </button>\n            );\n        default:\n            return (\n                <button type=\"button\" className=\"glow-on-hover\" {...props}>\n                    Welcome!\n                </button >\n            );\n    }\n}\n\nfunction App() {\n    const { speak, cancel, speaking } = useSpeechSynthesis({\n        onEnd: () => {\n            send('ENDSPEECH');\n        },\n    });\n    const { listen, listening, stop } = useSpeechRecognition({\n        onResult: (result: any) => {\n            send({ type: \"ASRRESULT\", value: result });\n        },\n    });\n    const [current, send, service] = useMachine(machine, {\n        devTools: true,\n        actions: {\n            recStart: asEffect(() => {\n                console.log('Ready to receive your speech.');\n                listen({\n                    interimResults: false,\n                    continuous: true\n                });\n            }),\n            recStop: asEffect(() => {\n                console.log('Recognition stopped.');\n                stop()\n            }),\n            changeColour: asEffect((context) => {\n                console.log('Repainting...');\n                document.body.style.background = context.recResult;\n            }),\n            ttsStart: asEffect((context, effect) => {\n                console.log('Speaking...');\n                speak({ text: context.ttsAgenda })\n            }),\n            ttsCancel: asEffect((context, effect) => {\n                console.log('TTS STOP...');\n                cancel()\n            })\n            /* speak: asEffect((context) => {\n\t     * console.log('Speaking...');\n             *     speak({text: context.ttsAgenda })\n             * } */\n        }\n    });\n\n\n    return (\n        <div className=\"App\">\n            <ReactiveButton state={current} onClick={() => send('CLICK')} />\n        </div>\n    )\n};\n\n\n\n/* RASA API\n *  */\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\nconst rasaurl = 'https://finalprojectgame.herokuapp.com/model/parse'\nconst nluRequest = (text: string) =>\n    fetch(new Request(proxyurl + rasaurl, {\n        method: 'POST',\n        headers: { 'Origin': 'http://maraev.me' }, // only required with proxy\n        body: `{\"text\": \"${text}\"}`\n    }))\n        .then(data => data.json());\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n    <App />,\n    rootElement);\n"]},"metadata":{},"sourceType":"module"}